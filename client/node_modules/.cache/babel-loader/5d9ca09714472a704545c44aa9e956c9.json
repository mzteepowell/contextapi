{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin2\\\\OneDrive\\\\Lambda School\\\\Web_3.3\\\\BuildWeek2-ContextAPI\\\\client\\\\src\\\\components\\\\AddItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory, useParams, Link, Switch, Route } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { itemFormSchema } from '../utils/formSchema';\nimport axiosWithAuth from '../utils/axiosWithAuth';\nimport { ProductContext } from '../contexts/ProductContext';\nimport SellersDashboard from './SellersDashboard';\nimport PrivateRoute from './PrivateRoute';\nimport { NewProductContext } from '../contexts/NewProductContext';\nimport NewProducts from './NewProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddItemForm(props) {\n  _s();\n\n  const {\n    setProducts\n  } = useContext(ProductContext);\n  const {\n    push\n  } = useHistory(); // Setting initial form values \n\n  const initialFormValues = {\n    id: Date.now(),\n    title: '',\n    price: '',\n    image: 'https://image.freepik.com/free-vector/coming-soon-message-illuminated-with-light-projector_1284-3622.jpg',\n    description: ''\n  }; // Setting initial values for form validation error messages\n\n  const initialFormErrors = {\n    title: '',\n    price: '',\n    image: 'https://image.freepik.com/free-vector/coming-soon-message-illuminated-with-light-projector_1284-3622.jpg',\n    description: ''\n  }; // Setting initial value for add item form submit button as disabled\n\n  const initialDisabled = true; // Setting variables into newProducts\n\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n  const [newProducts, setNewProducts] = useState([]);\n  const {\n    id\n  } = useParams(); // Using axios to post successfully submitted form with new item data to backend location\n\n  const postNewItem = newItem => {\n    axiosWithAuth().post('http://localhost:5000/api/products', newItem).then(res => {\n      console.log(res.data);\n      setProducts(res.data, {\n        id: Date.now()\n      });\n      setNewProducts(res.data, {\n        id: Date.now()\n      });\n      push(`/products`); // Successful post returns to dashboard\n    }).catch(err => {\n      console.log(err);\n    }).finally(setFormValues(initialFormValues)); // Form is reset regardless\n  };\n\n  console.log(newProducts); // Event handler functions\n\n  const inputChange = (name, value) => {\n    // Using yup.reach for individual form item validation\n    yup.reach(itemFormSchema, name).validate(value) // Clears error if validation is successful\n    .then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        // Validation error from schema if unsuccessful\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const formSubmit = () => {\n    const newItem = {\n      title: formValues.title.trim(),\n      price: formValues.price.trim(),\n      image: formValues.image.trim(),\n      description: formValues.description.trim()\n    };\n    postNewItem(newItem);\n  }; // Employing an effect hook to validate the form each time it is updated so the submit button will be enabled once the form is completely valid\n\n\n  useEffect(() => {\n    itemFormSchema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    formSubmit();\n  };\n\n  const onCancel = evt => {\n    push('/sellers');\n  };\n\n  const onChange = evt => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = evt.target;\n    const valueToUse = type === 'checkbox' ? checked : value;\n    inputChange(name, valueToUse);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"nav\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          classname: \"form\",\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-row\",\n              children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: formValues.name,\n                onChange: onChange,\n                name: \"title\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-row\",\n              children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: formValues.brand,\n                onChange: onChange,\n                name: \"price\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-row\",\n              children: [\"Image URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: formValues.model,\n                onChange: onChange,\n                name: \"image\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-row\",\n              children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: formValues.model_no,\n                onChange: onChange,\n                name: \"description\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"form-submit\",\n              children: /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"errors-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.brand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.model\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.min_rent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.max_rent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            classname: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: disabled,\n                id: \"submitBtn\",\n                children: \"Add Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: onCancel,\n                id: \"cancelBtn\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddItemForm, \"0h1dNUd7U6hcAr5qLSG8Flj/qFA=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItemForm\");","map":{"version":3,"sources":["C:/Users/Admin2/OneDrive/Lambda School/Web_3.3/BuildWeek2-ContextAPI/client/src/components/AddItemForm.js"],"names":["React","useState","useEffect","useContext","useHistory","useParams","Link","Switch","Route","yup","itemFormSchema","axiosWithAuth","ProductContext","SellersDashboard","PrivateRoute","NewProductContext","NewProducts","AddItemForm","props","setProducts","push","initialFormValues","id","Date","now","title","price","image","description","initialFormErrors","initialDisabled","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","newProducts","setNewProducts","postNewItem","newItem","post","then","res","console","log","data","catch","err","finally","inputChange","name","value","reach","validate","errors","formSubmit","trim","isValid","valid","onSubmit","evt","preventDefault","onCancel","onChange","type","checked","target","valueToUse","brand","model","model_no","category","min_rent","max_rent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8CC,KAA9C,QAA0D,kBAA1D;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAkBhB,UAAU,CAACS,cAAD,CAAlC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAShB,UAAU,EAAzB,CAFyC,CAIvC;;AACF,QAAMiB,iBAAiB,GAAG;AACxBC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADoB;AAExBC,IAAAA,KAAK,EAAE,EAFiB;AAGxBC,IAAAA,KAAK,EAAE,EAHiB;AAIxBC,IAAAA,KAAK,EAAE,0GAJiB;AAKxBC,IAAAA,WAAW,EAAE;AALW,GAA1B,CALyC,CAazC;;AACA,QAAMC,iBAAiB,GAAG;AACxBJ,IAAAA,KAAK,EAAE,EADiB;AAExBC,IAAAA,KAAK,EAAE,EAFiB;AAGxBC,IAAAA,KAAK,EAAE,0GAHiB;AAIxBC,IAAAA,WAAW,EAAE;AAJW,GAA1B,CAdyC,CAqBzC;;AACA,QAAME,eAAe,GAAG,IAAxB,CAtByC,CAwBzC;;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAACoB,iBAAD,CAA5C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC4B,iBAAD,CAA5C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC6B,eAAD,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCrC,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM;AAAEqB,IAAAA;AAAF,MAASjB,SAAS,EAAxB,CA/ByC,CAkCzC;;AACA,QAAMkC,WAAW,GAAGC,OAAO,IAAI;AAC7B7B,IAAAA,aAAa,GACZ8B,IADD,CACM,oCADN,EAC4CD,OAD5C,EAEGE,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA3B,MAAAA,WAAW,CAACwB,GAAG,CAACG,IAAL,EAAW;AAAExB,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAAN,OAAX,CAAX;AACAc,MAAAA,cAAc,CAACK,GAAG,CAACG,IAAL,EAAW;AAAExB,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAAN,OAAX,CAAd;AACAJ,MAAAA,IAAI,CAAE,WAAF,CAAJ,CAJa,CAIM;AACpB,KAPH,EAQG2B,KARH,CAQSC,GAAG,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KAVH,EAYGC,OAZH,CAYWjB,aAAa,CAACX,iBAAD,CAZxB,EAD6B,CAagB;AAC9C,GAdD;;AAeAuB,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ,EAlDyC,CAoDzC;;AACA,QAAMa,WAAW,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC;AACA3C,IAAAA,GAAG,CACA4C,KADH,CACS3C,cADT,EACyByC,IADzB,EAEGG,QAFH,CAEYF,KAFZ,EAGE;AAHF,KAIGV,IAJH,CAIQ,MAAM;AACVR,MAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ,SAACkB,IAAD,GAAQ;AAFI,OAAD,CAAb;AAID,KATH,EAUGJ,KAVH,CAUUC,GAAD,IAAS;AACdd,MAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ;AACA,SAACkB,IAAD,GAAQH,GAAG,CAACO,MAAJ,CAAW,CAAX;AAHI,OAAD,CAAb;AAKD,KAhBH;AAiBAvB,IAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ,OAACoB,IAAD,GAAQC;AAFI,KAAD,CAAb;AAID,GAvBD;;AAyBA,QAAMI,UAAU,GAAG,MAAM;AACvB,UAAMhB,OAAO,GAAG;AACdf,MAAAA,KAAK,EAAEM,UAAU,CAACN,KAAX,CAAiBgC,IAAjB,EADO;AAEd/B,MAAAA,KAAK,EAAEK,UAAU,CAACL,KAAX,CAAiB+B,IAAjB,EAFO;AAGd9B,MAAAA,KAAK,EAAEI,UAAU,CAACJ,KAAX,CAAiB8B,IAAjB,EAHO;AAId7B,MAAAA,WAAW,EAAEG,UAAU,CAACH,WAAX,CAAuB6B,IAAvB;AAJC,KAAhB;AAMAlB,IAAAA,WAAW,CAACC,OAAD,CAAX;AACD,GARD,CA9EyC,CAwFzC;;;AACAtC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,cAAc,CAACgD,OAAf,CAAuB3B,UAAvB,EAAmCW,IAAnC,CAAwCiB,KAAK,IAAI;AAC/CvB,MAAAA,WAAW,CAAC,CAACuB,KAAF,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAAC5B,UAAD,CAJM,CAAT;;AAMA,QAAM6B,QAAQ,GAAGC,GAAG,IAAI;AACtBA,IAAAA,GAAG,CAACC,cAAJ;AACAN,IAAAA,UAAU;AACX,GAHD;;AAKA,QAAMO,QAAQ,GAAGF,GAAG,IAAI;AACtBzC,IAAAA,IAAI,CAAC,UAAD,CAAJ;AACD,GAFD;;AAIA,QAAM4C,QAAQ,GAAGH,GAAG,IAAI;AACtB,UAAM;AAAEV,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAea,MAAAA,IAAf;AAAqBC,MAAAA;AAArB,QAAiCL,GAAG,CAACM,MAA3C;AACA,UAAMC,UAAU,GAAGH,IAAI,KAAK,UAAT,GAAsBC,OAAtB,GAAgCd,KAAnD;AACAF,IAAAA,WAAW,CAACC,IAAD,EAAOiB,UAAP,CAAX;AACD,GAJD;;AAMA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BAEA;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,QAAQ,EAAER,QAAjC;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,UAAjB;AAAA,gDACE;AACI,gBAAA,KAAK,EAAE7B,UAAU,CAACoB,IADtB;AAEI,gBAAA,QAAQ,EAAEa,QAFd;AAGI,gBAAA,IAAI,EAAC,OAHT;AAII,gBAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAO,cAAA,SAAS,EAAC,UAAjB;AAAA,gDACE;AACI,gBAAA,KAAK,EAAEjC,UAAU,CAACsC,KADtB;AAEI,gBAAA,QAAQ,EAAEL,QAFd;AAGI,gBAAA,IAAI,EAAC,OAHT;AAII,gBAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAiBE;AAAO,cAAA,SAAS,EAAC,UAAjB;AAAA,oDACE;AACI,gBAAA,KAAK,EAAEjC,UAAU,CAACuC,KADtB;AAEI,gBAAA,QAAQ,EAAEN,QAFd;AAGI,gBAAA,IAAI,EAAC,OAHT;AAII,gBAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,eAyBA;AAAO,cAAA,SAAS,EAAC,UAAjB;AAAA,sDACI;AACI,gBAAA,KAAK,EAAEjC,UAAU,CAACwC,QADtB;AAEI,gBAAA,QAAQ,EAAEP,QAFd;AAGI,gBAAA,IAAI,EAAC,aAHT;AAII,gBAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBA,eAiCE;AAAS,cAAA,SAAS,EAAC,aAAnB;AAAA,qCACE;AAAS,gBAAA,SAAS,EAAC,gBAAnB;AAAA,wCACE;AAAA,4BAAI/B,UAAU,CAACkB;AAAf;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,4BAAIlB,UAAU,CAACuC;AAAf;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA,4BAAIvC,UAAU,CAACoC;AAAf;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA,4BAAIpC,UAAU,CAACqC;AAAf;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAA,4BAAIrC,UAAU,CAACL;AAAf;AAAA;AAAA;AAAA;AAAA,wBALF,eAME;AAAA,4BAAIK,UAAU,CAACwC;AAAf;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE;AAAA,4BAAIxC,UAAU,CAACyC;AAAf;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAA,4BAAIzC,UAAU,CAACP;AAAf;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA+CM;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACJ;AAAQ,gBAAA,QAAQ,EAAES,QAAlB;AAA4B,gBAAA,EAAE,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCAEJ;AAAQ,gBAAA,OAAO,EAAE4B,QAAjB;AAA2B,gBAAA,EAAE,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFI;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/CN;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4ED;;GA1LuB9C,W;UAEPb,U,EA6BAC,S;;;KA/BOY,W","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory, useParams, Link, Switch, Route} from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { itemFormSchema } from '../utils/formSchema';\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\nimport { ProductContext } from '../contexts/ProductContext';\r\nimport SellersDashboard from './SellersDashboard';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport { NewProductContext } from '../contexts/NewProductContext';\r\nimport NewProducts from './NewProduct';\r\n\r\n\r\nexport default function AddItemForm(props) {\r\n  const { setProducts } = useContext(ProductContext)\r\n  const {push} = useHistory();\r\n  \r\n    // Setting initial form values \r\n  const initialFormValues = {\r\n    id: Date.now(),\r\n    title: '',   \r\n    price: '',   \r\n    image: 'https://image.freepik.com/free-vector/coming-soon-message-illuminated-with-light-projector_1284-3622.jpg',\r\n    description: '',\r\n    };\r\n\r\n  // Setting initial values for form validation error messages\r\n  const initialFormErrors = {\r\n    title: '',   \r\n    price: '',   \r\n    image: 'https://image.freepik.com/free-vector/coming-soon-message-illuminated-with-light-projector_1284-3622.jpg',\r\n    description: '',\r\n  };\r\n\r\n  // Setting initial value for add item form submit button as disabled\r\n  const initialDisabled = true;\r\n\r\n  // Setting variables into newProducts\r\n\r\n  const [formValues, setFormValues] = useState(initialFormValues);\r\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\r\n  const [disabled, setDisabled] = useState(initialDisabled);\r\n  const [newProducts, setNewProducts] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n\r\n  // Using axios to post successfully submitted form with new item data to backend location\r\n  const postNewItem = newItem => {\r\n    axiosWithAuth()\r\n    .post('http://localhost:5000/api/products', newItem) \r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setProducts(res.data, { id: Date.now() })\r\n        setNewProducts(res.data, { id: Date.now() })\r\n        push(`/products`); // Successful post returns to dashboard\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n      .finally(setFormValues(initialFormValues)) // Form is reset regardless\r\n  }\r\n  console.log(newProducts)\r\n\r\n  // Event handler functions\r\n  const inputChange = (name, value) => {\r\n    // Using yup.reach for individual form item validation\r\n    yup\r\n      .reach(itemFormSchema, name) \r\n      .validate(value)\r\n      // Clears error if validation is successful\r\n      .then(() => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: '',\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          // Validation error from schema if unsuccessful\r\n          [name]: err.errors[0],\r\n        });\r\n      })\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  const formSubmit = () => {\r\n    const newItem = {\r\n      title: formValues.title.trim(),\r\n      price: formValues.price.trim(),\r\n      image: formValues.image.trim(),\r\n      description: formValues.description.trim(),\r\n    };\r\n    postNewItem(newItem);\r\n  }\r\n\r\n  // Employing an effect hook to validate the form each time it is updated so the submit button will be enabled once the form is completely valid\r\n  useEffect(() => {\r\n    itemFormSchema.isValid(formValues).then(valid => {\r\n      setDisabled(!valid);\r\n    });\r\n  }, [formValues])\r\n\r\n  const onSubmit = evt => {\r\n    evt.preventDefault();\r\n    formSubmit();\r\n  }\r\n\r\n  const onCancel = evt => {\r\n    push('/sellers');\r\n  }\r\n\r\n  const onChange = evt => {\r\n    const { name, value, type, checked } = evt.target;\r\n    const valueToUse = type === 'checkbox' ? checked : value;\r\n    inputChange(name, valueToUse);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='home-wrapper'>\r\n        <nav className='nav'>\r\n        <h2>Add a New Item</h2>\r\n        </nav>\r\n        <div className='item-wrapper'>\r\n          \r\n        <form classname='form' onSubmit={onSubmit}>\r\n          <div className='form-group'>\r\n            <label className='form-row'>Title:\r\n              <input\r\n                  value={formValues.name}\r\n                  onChange={onChange}\r\n                  name='title'\r\n                  type='text'\r\n                  />\r\n              </label>        \r\n            <label className='form-row'>Price:\r\n              <input\r\n                  value={formValues.brand}\r\n                  onChange={onChange}\r\n                  name='price'\r\n                  type='text'\r\n                  />\r\n              </label>\r\n            <label className='form-row'>Image URL:\r\n              <input\r\n                  value={formValues.model}\r\n                  onChange={onChange}\r\n                  name='image'\r\n                  type='text'\r\n                  />\r\n            </label>\r\n          <label className='form-row'>Description:\r\n              <input\r\n                  value={formValues.model_no}\r\n                  onChange={onChange}\r\n                  name='description'\r\n                  type='text'\r\n                  />\r\n            </label>\r\n            <section className='form-submit'>\r\n              <section className='errors-section'>\r\n                <p>{formErrors.name}</p>\r\n                <p>{formErrors.category}</p>\r\n                <p>{formErrors.brand}</p>\r\n                <p>{formErrors.model}</p>\r\n                <p>{formErrors.description}</p>\r\n                <p>{formErrors.min_rent}</p>\r\n                <p>{formErrors.max_rent}</p>\r\n                <p>{formErrors.price}</p>\r\n                </section>\r\n          </section>\r\n          </div>\r\n              <div classname='buttons'>\r\n                <div className='form-button'>\r\n            <button disabled={disabled} id='submitBtn' >Add Item</button>\r\n                </div>\r\n                <div className='form-button'>\r\n                  \r\n            <button onClick={onCancel} id='cancelBtn' >Cancel</button>\r\n                </div>\r\n                \r\n          </div>\r\n        </form>\r\n        </div>\r\n      </div>\r\n      {/* <NewProductContext.Provider value={{ newProducts, setNewProducts }}>\r\n      \r\n            <Route exact path='/sellers'>\r\n\t\t\t\t\t\t\t<NewProducts />\r\n\t\t\t\t\t\t\t</Route>\r\n      </NewProductContext.Provider> */}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
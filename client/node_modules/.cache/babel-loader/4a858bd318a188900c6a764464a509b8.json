{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin2\\\\OneDrive\\\\Lambda School\\\\Web_3.3\\\\BuildWeek2-ContextAPI\\\\client\\\\src\\\\components\\\\AddItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as yup from 'yup';\nimport productFormSchema from '../utils/productSchema';\nimport axiosWithAuth from '../utils/axiosWithAuth';\nimport { ProductContext } from '../contexts/ProductContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  itemname: \"\",\n  itemcostperday: 0.00,\n  itemstatus: {\n    itemstatusid: 1,\n    itemstatustype: \"Available\"\n  },\n  itemdescription: \"\",\n  numberofdaysrented: 0\n};\nconst initialFormErrors = {\n  itemname: \"\",\n  itemcostperday: 0.00,\n  itemstatus: {\n    itemstatusid: 1,\n    itemstatustype: \"Available\"\n  },\n  itemdescription: \"\",\n  numberofdaysrented: 0\n};\nconst initialDisabled = true;\nexport default function AddItemForm(props) {\n  _s();\n\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled); // const [newProducts, setNewProducts] = useState([]);\n\n  const [user, setUser] = useState({});\n  const {\n    products,\n    setProducts\n  } = useContext(ProductContext);\n  const userName = localStorage.getItem(\"name\");\n  const {\n    push\n  } = useHistory();\n  useEffect(() => {\n    // this data can be passed in through props instead\n    axiosWithAuth().get(`/users/user/name/${userName}`).then(res => {\n      setUser(res.data);\n    }).catch(err => console.log({\n      err\n    }));\n  }, [userName]);\n  let id = user.userid;\n  let usrname = user.username;\n  let usremail = user.email; // Using axios to post successfully submitted form with new item data to backend location\n\n  const postNewItem = newItem => {\n    axiosWithAuth().post('/items/item', newItem).then(res => {\n      console.log(res.data);\n      setProducts([...products, res.data], {\n        id: Date.now()\n      }); // setNewProducts(res.data, { id: Date.now() })\n\n      push(`/sellers`); // Successful post returns to dashboard\n    }).catch(err => {\n      console.log(err);\n    }).finally(setFormValues(initialFormValues)); // Form is reset regardless\n  };\n\n  console.log(products); // Event handler functions\n\n  const inputChange = (name, value) => {\n    // Using yup.reach for individual form item validation\n    yup.reach(productFormSchema, name).validate(value) // Clears error if validation is successful\n    .then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        // Validation error from schema if unsuccessful\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    productFormSchema.isValid(products).then(valid => setDisabled(!valid));\n  }, [products]);\n\n  const onChange = (name, value) => {\n    inputChange({ ...products,\n      [name]: value\n    });\n  };\n\n  const change = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    inputChange(name, value);\n    onChange(name, value);\n  };\n\n  const addItem = evt => {\n    const newItem = {\n      user: {\n        userid: id,\n        userrole: {\n          userroleid: 1,\n          userroletype: \"OWNER\"\n        },\n        username: usrname,\n        email: usremail\n      },\n      itemname: products.itemname,\n      itemcostperday: products.itemcostperday,\n      itemstatus: {\n        itemstatusid: 1,\n        itemstatustype: \"Available\"\n      },\n      itemdescription: products.itemdescription,\n      numberofdaysrented: 0\n    };\n    console.log(newItem);\n    postNewItem(newItem);\n  };\n\n  const cancel = evt => {\n    push(\"/sellers\");\n  }; // Employing an effect hook to validate the form each time it is updated so the submit button will be enabled once the form is completely valid\n\n\n  useEffect(() => {\n    productFormSchema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    addItem();\n    push('/sellers');\n  };\n\n  console.log(products);\n\n  const onCancel = evt => {\n    push('/sellers');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"nav\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          classame: \"form\",\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-row\",\n              children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: formValues.name,\n                onChange: change,\n                name: \"title\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-row\",\n              children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: formValues.brand,\n                onChange: onChange,\n                name: \"price\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-row\",\n              children: [\"Image URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: formValues.model,\n                onChange: onChange,\n                name: \"image\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-row\",\n              children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: formValues.model_no,\n                onChange: onChange,\n                name: \"description\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"form-submit\",\n              children: /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"errors-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.brand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.model\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.min_rent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.max_rent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: formErrors.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: disabled,\n                id: \"submitBtn\",\n                children: \"Add Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: onCancel,\n                id: \"cancelBtn\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddItemForm, \"o/Y9g+ao2dT9U+OS2uNGUN+YAyA=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItemForm\");","map":{"version":3,"sources":["C:/Users/Admin2/OneDrive/Lambda School/Web_3.3/BuildWeek2-ContextAPI/client/src/components/AddItemForm.js"],"names":["React","useState","useEffect","useContext","useHistory","yup","productFormSchema","axiosWithAuth","ProductContext","initialFormValues","itemname","itemcostperday","itemstatus","itemstatusid","itemstatustype","itemdescription","numberofdaysrented","initialFormErrors","initialDisabled","AddItemForm","props","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","user","setUser","products","setProducts","userName","localStorage","getItem","push","get","then","res","data","catch","err","console","log","id","userid","usrname","username","usremail","email","postNewItem","newItem","post","Date","now","finally","inputChange","name","value","reach","validate","errors","isValid","valid","onChange","change","evt","target","addItem","userrole","userroleid","userroletype","cancel","onSubmit","preventDefault","onCancel","brand","model","model_no","category","description","min_rent","max_rent","price"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport  productFormSchema  from '../utils/productSchema';\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\nimport { ProductContext } from '../contexts/ProductContext';\r\n\r\n      const initialFormValues = {\r\n        itemname: \"\",\r\n        itemcostperday: 0.00,\r\n        itemstatus: {\r\n            itemstatusid: 1,\r\n            itemstatustype: \"Available\"\r\n        },\r\n        itemdescription: \"\",\r\n        numberofdaysrented: 0\r\n    }\r\n    \r\n    const initialFormErrors = {\r\n        itemname: \"\",\r\n        itemcostperday: 0.00,\r\n        itemstatus: {\r\n            itemstatusid: 1,\r\n            itemstatustype: \"Available\"\r\n        },\r\n        itemdescription: \"\",\r\n        numberofdaysrented: 0\r\n}\r\n    \r\nconst initialDisabled = true;\r\n  \r\nexport default function AddItemForm(props) {\r\n  const [formValues, setFormValues] = useState(initialFormValues);\r\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\r\n  const [disabled, setDisabled] = useState(initialDisabled);\r\n  // const [newProducts, setNewProducts] = useState([]);\r\n  const [ user, setUser] = useState({})\r\n  const { products, setProducts } = useContext(ProductContext)\r\n  const userName = localStorage.getItem(\"name\");\r\n  const { push } = useHistory();\r\n\r\n  useEffect(() => {                       // this data can be passed in through props instead\r\n  axiosWithAuth()\r\n      .get(`/users/user/name/${userName}`)\r\n      .then(res => {\r\n          setUser(res.data);\r\n      })\r\n      .catch(err => console.log({err}))\r\n  }, [userName])\r\n  \r\n  let id = user.userid;\r\n  let usrname = user.username;\r\n  let usremail = user.email\r\n\r\n  // Using axios to post successfully submitted form with new item data to backend location\r\n  const postNewItem = newItem => {\r\n    axiosWithAuth()\r\n    .post('/items/item', newItem) \r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setProducts([...products, res.data], { id: Date.now() })\r\n        // setNewProducts(res.data, { id: Date.now() })\r\n        push(`/sellers`); // Successful post returns to dashboard\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n      .finally(setFormValues(initialFormValues)) // Form is reset regardless\r\n  }\r\n  console.log(products)\r\n\r\n  // Event handler functions\r\n  const inputChange = (name, value) => {\r\n    // Using yup.reach for individual form item validation\r\n    yup\r\n      .reach(productFormSchema, name) \r\n      .validate(value)\r\n      // Clears error if validation is successful\r\n      .then(() => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: '',\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          // Validation error from schema if unsuccessful\r\n          [name]: err.errors[0],\r\n        });\r\n      })\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value\r\n    });\r\n  }\r\n  useEffect(() => {\r\n        productFormSchema.isValid(products).then(valid => setDisabled(!valid))\r\n    }, [products])\r\n\r\n    const onChange = (name, value) => {\r\n      inputChange({ ...products, [name]: value });\r\n  }\r\n\r\n  const change = (evt) => {\r\n        const { name, value } = evt.target\r\n        inputChange(name,value);\r\n        onChange(name, value);\r\n  }\r\n  \r\n  const addItem = evt => {\r\n        const newItem = {\r\n            user: {\r\n                userid: id,\r\n                userrole: {\r\n                    userroleid: 1,\r\n                    userroletype: \"OWNER\",\r\n                },\r\n                username: usrname,\r\n                email: usremail,\r\n            },\r\n            itemname: products.itemname,\r\n            itemcostperday: products.itemcostperday,\r\n            itemstatus: {\r\n                itemstatusid: 1,\r\n                itemstatustype: \"Available\"\r\n            },\r\n            itemdescription: products.itemdescription,\r\n            numberofdaysrented: 0\r\n        }\r\n        console.log(newItem)\r\n    postNewItem(newItem)\r\n  }\r\n  \r\n  const cancel = evt => {\r\n      push(\"/sellers\")\r\n  }\r\n\r\n  // Employing an effect hook to validate the form each time it is updated so the submit button will be enabled once the form is completely valid\r\n  useEffect(() => {\r\n    productFormSchema.isValid(formValues).then(valid => {\r\n      setDisabled(!valid);\r\n    });\r\n  }, [formValues])\r\n\r\n  const onSubmit = evt => {\r\n    evt.preventDefault();\r\n    addItem();\r\n    push('/sellers')\r\n  }\r\n  console.log(products)\r\n  const onCancel = evt => {\r\n    push('/sellers');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='home-wrapper'>\r\n        <nav className='nav'>\r\n        <h2>Add a New Item</h2>\r\n        </nav>\r\n        <div className='item-wrapper'>\r\n          \r\n        <form classame='form' onSubmit={onSubmit}>\r\n          <div className='form-group'>\r\n            <label className='form-row'>Title:\r\n              <input\r\n                  value={formValues.name}\r\n                  onChange={change}\r\n                  name='title'\r\n                  type='text'\r\n                  />\r\n              </label>        \r\n            <label className='form-row'>Price:\r\n              <input\r\n                  value={formValues.brand}\r\n                  onChange={onChange}\r\n                  name='price'\r\n                  type='text'\r\n                  />\r\n              </label>\r\n            <label className='form-row'>Image URL:\r\n              <input\r\n                  value={formValues.model}\r\n                  onChange={onChange}\r\n                  name='image'\r\n                  type='text'\r\n                  />\r\n            </label>\r\n          <label className='form-row'>Description:\r\n              <input\r\n                  value={formValues.model_no}\r\n                  onChange={onChange}\r\n                  name='description'\r\n                  type='text'\r\n                  />\r\n            </label>\r\n            <section className='form-submit'>\r\n              <section className='errors-section'>\r\n                <p>{formErrors.name}</p>\r\n                <p>{formErrors.category}</p>\r\n                <p>{formErrors.brand}</p>\r\n                <p>{formErrors.model}</p>\r\n                <p>{formErrors.description}</p>\r\n                <p>{formErrors.min_rent}</p>\r\n                <p>{formErrors.max_rent}</p>\r\n                <p>{formErrors.price}</p>\r\n                </section>\r\n          </section>\r\n          </div>\r\n              <div className='buttons'>\r\n                <div className='form-button'>\r\n            <button disabled={disabled} id='submitBtn' >Add Item</button>\r\n                </div>\r\n                <div className='form-button'>\r\n                  \r\n            <button onClick={onCancel} id='cancelBtn' >Cancel</button>\r\n                </div>\r\n                \r\n          </div>\r\n        </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
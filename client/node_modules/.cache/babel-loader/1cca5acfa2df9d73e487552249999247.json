{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin2\\\\OneDrive\\\\Lambda School\\\\Web_3.3\\\\BuildWeek2-ContextAPI\\\\client\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport formSchema from '../utils/formSchema';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  username: '',\n  password: ''\n};\nconst initialFormErrors = {\n  username: '',\n  password: ''\n};\nconst initialDisabled = true;\nexport default function LoginForm() {\n  _s();\n\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n  const {\n    push\n  } = useHistory();\n\n  const onChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    yup.reach(formSchema, name) // get to this part of the schema\n    //we can then run validate using the value\n    .validate(value) // validate this value\n    .then(() => {\n      // happy path and clear the error\n      setFormErrors({ ...formErrors,\n        [name]: \"\"\n      });\n    }) // if the validation is unsuccessful, we can set the error message to the message\n    // returned from yup (that we created in our schema)\n    .catch(err => {\n      setFormErrors({ ...formErrors,\n        // validation error from schema\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    formSchema.isValid(values).then(valid => setDisabled(!valid));\n  }, [values]);\n\n  const loginUser = newUser => {\n    axios.post('https://reqres.in/api/login', newUser).then(res => {\n      localStorage.setItem('token', res.data.payload);\n      console.log(res.data);\n      push('/products');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const newUser = {\n      username: formValues.email.trim(),\n      password: formValues.password.trim()\n    }; // call to API\n\n    loginUser(newUser);\n    setUser(newUser);\n    setFormValues(initialFormValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form container\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: formValues.email,\n            onChange: onChange,\n            name: \"email\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), formErrors.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: formValues.password,\n            onChange: onChange,\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), formErrors.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submitBtn\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"lmHaPe3b8LAXGp8FapMc42d7e/Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Admin2/OneDrive/Lambda School/Web_3.3/BuildWeek2-ContextAPI/client/src/components/LoginForm.js"],"names":["React","useState","useEffect","yup","formSchema","useHistory","axios","initialFormValues","username","password","initialFormErrors","initialDisabled","LoginForm","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","push","onChange","evt","name","value","target","reach","validate","then","catch","err","errors","isValid","values","valid","loginUser","newUser","post","res","localStorage","setItem","data","payload","console","log","onSubmit","preventDefault","email","trim","setUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport * as yup from 'yup'\r\nimport formSchema from '../utils/formSchema'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nconst initialFormValues = {\r\n  username: '',\r\n  password: '',\r\n}\r\n\r\nconst initialFormErrors = {\r\n  username: '',\r\n  password: '',\r\n}\r\n\r\nconst initialDisabled = true\r\n\r\nexport default function LoginForm() {\r\n  const [formValues, setFormValues] = useState(initialFormValues)\r\n  const [formErrors, setFormErrors] = useState(initialFormErrors)\r\n  const [disabled, setDisabled] = useState(initialDisabled)\r\n  const { push } = useHistory();\r\n\r\n  const onChange = (evt) => {\r\n    const { name, value } = evt.target\r\n\r\n    yup\r\n      .reach(formSchema, name) // get to this part of the schema\r\n      //we can then run validate using the value\r\n      .validate(value) // validate this value\r\n      .then(() => {\r\n        // happy path and clear the error\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: \"\",\r\n        });\r\n      })\r\n      // if the validation is unsuccessful, we can set the error message to the message\r\n      // returned from yup (that we created in our schema)\r\n      .catch((err) => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          // validation error from schema\r\n          [name]: err.errors[0],\r\n        });\r\n      });\r\n\r\n    setFormValues({\r\n      ...formValues, \r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n        formSchema.isValid(values).then(valid => setDisabled(!valid))\r\n      }, [values])\r\n\r\n  \r\n  const loginUser = (newUser) => {\r\n    axios\r\n      .post('https://reqres.in/api/login', newUser)\r\n      .then(res => {\r\n        localStorage.setItem('token', res.data.payload);\r\n        console.log(res.data)\r\n        push('/products')\r\n      })\r\n      .catch(err=>{\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const newUser = {\r\n      username: formValues.email.trim(),\r\n      password: formValues.password.trim(),\r\n    }\r\n\r\n    // call to API\r\n    loginUser(newUser)\r\n    setUser(newUser)\r\n    setFormValues(initialFormValues)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form container\" onSubmit={onSubmit}>\r\n        <div>\r\n          <label>\r\n            Email:\r\n            <input\r\n              value={formValues.email}\r\n              onChange={onChange}\r\n              name=\"email\"\r\n              type=\"text\"\r\n            />\r\n            {formErrors.email}\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Password:\r\n            <input\r\n              value={formValues.password}\r\n              onChange={onChange}\r\n              name=\"password\"\r\n              type=\"password\"\r\n            />\r\n            {formErrors.password}\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <button id=\"submitBtn\">Log In</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
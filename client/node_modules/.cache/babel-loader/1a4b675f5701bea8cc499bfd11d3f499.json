{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin2\\\\OneDrive\\\\Lambda School\\\\Web_3.3\\\\BuildWeek2-ContextAPI\\\\client\\\\src\\\\components\\\\AddItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams, Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { itemFormSchema } from '../utils/formSchema';\nimport axiosWithAuth from '../utils/axiosWithAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddItemForm() {\n  _s();\n\n  const {\n    push\n  } = useHistory(); // Setting initial form values \n\n  const initialFormValues = {\n    title: '',\n    price: '',\n    image: 'https://image.freepik.com/free-vector/coming-soon-message-illuminated-with-light-projector_1284-3622.jpg',\n    description: ''\n  }; // Setting initial values for form validation error messages\n\n  const initialFormErrors = {\n    title: '',\n    price: '',\n    image: 'https://image.freepik.com/free-vector/coming-soon-message-illuminated-with-light-projector_1284-3622.jpg',\n    description: ''\n  }; // Setting initial value for add item form submit button as disabled\n\n  const initialDisabled = true; // Setting variables into State\n\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n  const {\n    id\n  } = useParams(); // Using axios to post successfully submitted form with new item data to backend location\n\n  const postNewItem = newItem => {\n    axiosWithAuth().post('http://localhost:5000/api/products', newItem).then(res => {\n      console.log(res.data);\n      props.set;\n      push(`/products`); // Successful post returns to dashboard\n    }).catch(err => {\n      console.log(err);\n    }).finally(setFormValues(initialFormValues)); // Form is reset regardless\n  }; // Event handler functions\n\n\n  const inputChange = (name, value) => {\n    // Using yup.reach for individual form item validation\n    yup.reach(itemFormSchema, name).validate(value) // Clears error if validation is successful\n    .then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        // Validation error from schema if unsuccessful\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const formSubmit = () => {\n    const newItem = {\n      name: formValues.name.trim(),\n      category: ['camera', 'video_recording', 'live_audio', 'audio_recording', 'three_d_print', 'computer', 'printer', 'other'].filter(category => formValues[category]),\n      brand: formValues.brand.trim(),\n      model: formValues.model.trim(),\n      model_no: formValues.model_no.trim(),\n      description: formValues.description.trim(),\n      min_rent: formValues.min_rent.trim(),\n      max_rent: formValues.max_rent.trim(),\n      price: formValues.price.trim()\n    };\n    postNewItem(newItem);\n  }; // Employing an effect hook to validate the form each time it is updated so the submit button will be enabled once the form is completely valid\n\n\n  useEffect(() => {\n    itemFormSchema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    formSubmit();\n  };\n\n  const onCancel = evt => {\n    push('/sellers');\n  };\n\n  const onChange = evt => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = evt.target;\n    const valueToUse = type === 'checkbox' ? checked : value;\n    inputChange(name, valueToUse);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        classname: \"form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-row\",\n            children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: formValues.name,\n              onChange: onChange,\n              name: \"title\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-row\",\n            children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: formValues.brand,\n              onChange: onChange,\n              name: \"price\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-row\",\n            children: [\"Image URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: formValues.model,\n              onChange: onChange,\n              name: \"image\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-row\",\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: formValues.model_no,\n              onChange: onChange,\n              name: \"description\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"form-submit\",\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"errors-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: formErrors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formErrors.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formErrors.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formErrors.model\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formErrors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formErrors.min_rent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formErrors.max_rent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formErrors.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          classname: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: disabled,\n              id: \"submitBtn\",\n              children: \"Add Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onCancel,\n              id: \"cancelBtn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddItemForm, \"1w76qE9ciTr+Ep188CxVhiSKNbM=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItemForm\");","map":{"version":3,"sources":["C:/Users/Admin2/OneDrive/Lambda School/Web_3.3/BuildWeek2-ContextAPI/client/src/components/AddItemForm.js"],"names":["React","useState","useEffect","useHistory","useParams","Link","yup","itemFormSchema","axiosWithAuth","AddItemForm","push","initialFormValues","title","price","image","description","initialFormErrors","initialDisabled","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","id","postNewItem","newItem","post","then","res","console","log","data","props","set","catch","err","finally","inputChange","name","value","reach","validate","errors","formSubmit","trim","category","filter","brand","model","model_no","min_rent","max_rent","isValid","valid","onSubmit","evt","preventDefault","onCancel","onChange","type","checked","target","valueToUse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { itemFormSchema } from '../utils/formSchema'\r\nimport axiosWithAuth from '../utils/axiosWithAuth';\r\n\r\nexport default function AddItemForm() {\r\n  const {push} = useHistory();\r\n  \r\n    // Setting initial form values \r\n  const initialFormValues = {\r\n    title: '',   \r\n    price: '',   \r\n    image: 'https://image.freepik.com/free-vector/coming-soon-message-illuminated-with-light-projector_1284-3622.jpg',\r\n    description: '',\r\n    };\r\n\r\n  // Setting initial values for form validation error messages\r\n  const initialFormErrors = {\r\n    title: '',   \r\n    price: '',   \r\n    image: 'https://image.freepik.com/free-vector/coming-soon-message-illuminated-with-light-projector_1284-3622.jpg',\r\n    description: '',\r\n  };\r\n\r\n  // Setting initial value for add item form submit button as disabled\r\n  const initialDisabled = true;\r\n\r\n  // Setting variables into State\r\n\r\n  const [formValues, setFormValues] = useState(initialFormValues);\r\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\r\n  const [disabled, setDisabled] = useState(initialDisabled);\r\n\r\n  const { id } = useParams();\r\n\r\n\r\n  // Using axios to post successfully submitted form with new item data to backend location\r\n  const postNewItem = newItem => {\r\n    axiosWithAuth()\r\n    .post('http://localhost:5000/api/products', newItem) \r\n      .then((res) => {\r\n        console.log(res.data)\r\n        props.set\r\n        push(`/products`); // Successful post returns to dashboard\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n      .finally(setFormValues(initialFormValues)) // Form is reset regardless\r\n  }\r\n\r\n  // Event handler functions\r\n  const inputChange = (name, value) => {\r\n    // Using yup.reach for individual form item validation\r\n    yup\r\n      .reach(itemFormSchema, name) \r\n      .validate(value)\r\n      // Clears error if validation is successful\r\n      .then(() => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: '',\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          // Validation error from schema if unsuccessful\r\n          [name]: err.errors[0],\r\n        });\r\n      })\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  const formSubmit = () => {\r\n    const newItem = {\r\n      name: formValues.name.trim(),\r\n      category: ['camera', 'video_recording', 'live_audio', 'audio_recording', 'three_d_print', 'computer', 'printer', 'other'].filter(category => formValues[category]),\r\n      brand: formValues.brand.trim(),\r\n      model: formValues.model.trim(),\r\n      model_no: formValues.model_no.trim(),\r\n      description: formValues.description.trim(),\r\n      min_rent: formValues.min_rent.trim(),\r\n      max_rent: formValues.max_rent.trim(),\r\n      price: formValues.price.trim()\r\n    };\r\n    postNewItem(newItem);\r\n  }\r\n\r\n  // Employing an effect hook to validate the form each time it is updated so the submit button will be enabled once the form is completely valid\r\n  useEffect(() => {\r\n    itemFormSchema.isValid(formValues).then(valid => {\r\n      setDisabled(!valid);\r\n    });\r\n  }, [formValues])\r\n\r\n  const onSubmit = evt => {\r\n    evt.preventDefault();\r\n    formSubmit();\r\n  }\r\n\r\n  const onCancel = evt => {\r\n    push('/sellers');\r\n  }\r\n\r\n  const onChange = evt => {\r\n    const { name, value, type, checked } = evt.target;\r\n    const valueToUse = type === 'checkbox' ? checked : value;\r\n    inputChange(name, valueToUse);\r\n  }\r\n\r\n  return (\r\n    <div className='home-wrapper'>\r\n      <nav className='nav'>\r\n      <h2>Add a New Item</h2>\r\n      </nav>\r\n      <div className='item-wrapper'>\r\n        \r\n      <form classname='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <label className='form-row'>Title:\r\n            <input\r\n                value={formValues.name}\r\n                onChange={onChange}\r\n                name='title'\r\n                type='text'\r\n                />\r\n            </label>\r\n        {/* End checkbox section */}\r\n        \r\n          <label className='form-row'>Price:\r\n            <input\r\n                value={formValues.brand}\r\n                onChange={onChange}\r\n                name='price'\r\n                type='text'\r\n                />\r\n            </label>\r\n          <label className='form-row'>Image URL:\r\n            <input\r\n                value={formValues.model}\r\n                onChange={onChange}\r\n                name='image'\r\n                type='text'\r\n                />\r\n          </label>\r\n        <label className='form-row'>Description:\r\n            <input\r\n                value={formValues.model_no}\r\n                onChange={onChange}\r\n                name='description'\r\n                type='text'\r\n                />\r\n          </label>\r\n          <section className='form-submit'>\r\n            <section className='errors-section'>\r\n              <p>{formErrors.name}</p>\r\n              <p>{formErrors.category}</p>\r\n              <p>{formErrors.brand}</p>\r\n              <p>{formErrors.model}</p>\r\n              <p>{formErrors.description}</p>\r\n              <p>{formErrors.min_rent}</p>\r\n              <p>{formErrors.max_rent}</p>\r\n              <p>{formErrors.price}</p>\r\n              </section>\r\n        </section>\r\n        </div>\r\n            <div classname='buttons'>\r\n              <div className='form-button'>\r\n          <button disabled={disabled} id='submitBtn' >Add Item</button>\r\n              </div>\r\n              <div className='form-button'>\r\n                \r\n          <button onClick={onCancel} id='cancelBtn' >Cancel</button>\r\n              </div>\r\n              \r\n        </div>\r\n      </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin2\\\\OneDrive\\\\Lambda School\\\\Web_3.3\\\\BuildWeek2-ContextAPI\\\\client\\\\src\\\\components\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport * as yup from 'yup';\nimport formSchema from '../utils/formSchema';\nimport { useHistory } from 'react-router-dom';\nimport { NewProductContext, ProductContext } from '../contexts/ProductContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  username: '',\n  password: ''\n};\nconst initialFormErrors = {\n  username: '',\n  password: ''\n};\nconst initialDisabled = true;\nexport default function LoginForm() {\n  _s();\n\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n  const {\n    setIsLoggedIn\n  } = useContext(ProductContext);\n  const {\n    push\n  } = useHistory();\n\n  const update = (name, value) => {\n    yup.reach(formSchema, name) // get to this part of the schema\n    //we can then run validate using the value\n    .validate(value) // validate this value\n    .then(() => {\n      // happy path and clear the error\n      setFormErrors({ ...formErrors,\n        [name]: \"\"\n      });\n    }) // if the validation is unsuccessful, we can set the error message to the message\n    // returned from yup (that we created in our schema)\n    .catch(err => {\n      setFormErrors({ ...formErrors,\n        // validation error from schema\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    formSchema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    axios.post(\"https://usemytechstuff-tt26.herokuapp.com/login\", `grant_type=password&username=${formValues.username}&password=${formValues.password}`, {\n      headers: {\n        Authorization: `Basic ${btoa(\"lambda-client:lambda-secret\")}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(res => {\n      // console.log(\"res.data log:\", res.data);\n      setIsLoggedIn(true);\n      localStorage.setItem(\"token\", res.data.access_token);\n      localStorage.setItem(\"name\", formValues.username);\n      push(\"/products\");\n      console.log(localStorage.getItem(\"name\"));\n      console.log(localStorage.getItem(\"token\"));\n    }).catch(err => console.log({\n      err\n    }));\n  };\n\n  const change = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    update(name, value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-row\",\n            children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: formValues.username,\n              onChange: change,\n              name: \"username\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), formErrors.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              value: formValues.password,\n              onChange: change,\n              name: \"password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), formErrors.password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submitBtn\",\n            disabled: disabled,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"UBNifcwaQv05k6xPEfiUOoFwJG4=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Admin2/OneDrive/Lambda School/Web_3.3/BuildWeek2-ContextAPI/client/src/components/LoginForm.js"],"names":["React","useState","useEffect","useContext","yup","formSchema","useHistory","NewProductContext","ProductContext","axios","initialFormValues","username","password","initialFormErrors","initialDisabled","LoginForm","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","setIsLoggedIn","push","update","name","value","reach","validate","then","catch","err","errors","isValid","valid","onSubmit","evt","preventDefault","post","headers","Authorization","btoa","res","localStorage","setItem","data","access_token","console","log","getItem","change","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport * as yup from 'yup'\r\nimport formSchema from '../utils/formSchema'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { NewProductContext, ProductContext } from '../contexts/ProductContext';\r\nimport axios from 'axios';\r\n\r\nconst initialFormValues = {\r\n  username: '',\r\n  password: '',\r\n}\r\n\r\nconst initialFormErrors = {\r\n  username: '',\r\n  password: '',\r\n}\r\n\r\nconst initialDisabled = true\r\n\r\nexport default function LoginForm() {\r\n  const [formValues, setFormValues] = useState(initialFormValues)\r\n  const [formErrors, setFormErrors] = useState(initialFormErrors)\r\n  const [disabled, setDisabled] = useState(initialDisabled)\r\n  const { setIsLoggedIn } = useContext(ProductContext)\r\n  const { push } = useHistory();\r\n\r\n  const update = (name, value) => {\r\n    yup\r\n      .reach(formSchema, name) // get to this part of the schema\r\n      //we can then run validate using the value\r\n      .validate(value) // validate this value\r\n      .then(() => {\r\n        // happy path and clear the error\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: \"\",\r\n        });\r\n      })\r\n      // if the validation is unsuccessful, we can set the error message to the message\r\n      // returned from yup (that we created in our schema)\r\n      .catch((err) => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          // validation error from schema\r\n          [name]: err.errors[0],\r\n        });\r\n      });\r\n\r\n    setFormValues({\r\n      ...formValues, \r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n        formSchema.isValid(formValues).then(valid => setDisabled(!valid))\r\n      }, [formValues])\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    axios\r\n          .post(\r\n            \"https://usemytechstuff-tt26.herokuapp.com/login\",\r\n            `grant_type=password&username=${formValues.username}&password=${formValues.password}`, \r\n            {\r\n              headers: {\r\n                Authorization: `Basic ${btoa(\"lambda-client:lambda-secret\")}`,\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n              },\r\n            },\r\n          )\r\n          .then((res) => {\r\n            // console.log(\"res.data log:\", res.data);\r\n            setIsLoggedIn(true);\r\n            localStorage.setItem(\"token\", res.data.access_token);\r\n            localStorage.setItem(\"name\", formValues.username);\r\n            push(\"/products\");\r\n            console.log(localStorage.getItem(\"name\"));\r\n            console.log(localStorage.getItem(\"token\"));\r\n          })\r\n          .catch((err) => console.log({err}))\r\n  }\r\n\r\n  const change = (evt) => {\r\n        const { name, value } = evt.target;\r\n        update(name, value);\r\n  };\r\n    \r\n  return (\r\n    <div className='home-wrapper'>\r\n        <div className='item-wrapper'>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div>\r\n          <label className='form-row'> \r\n            Username:\r\n            <input\r\n              value={formValues.username}\r\n              onChange={change}\r\n              name=\"username\"\r\n              type=\"text\"\r\n            />\r\n            {formErrors.username}\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Password:\r\n            <input\r\n              value={formValues.password}\r\n              onChange={change}\r\n              name=\"password\"\r\n              type=\"password\"\r\n            />\r\n            {formErrors.password}\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <button id=\"submitBtn\"\r\n          disabled={disabled}>Log In</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}